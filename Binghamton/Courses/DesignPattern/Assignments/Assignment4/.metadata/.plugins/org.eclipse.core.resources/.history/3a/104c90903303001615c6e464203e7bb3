package wordCount.visitors;

import wordCount.treesForStrings.BST;
import wordCount.treesForStrings.Node;
import wordCount.util.FileProcessor;

public class PopulateTreeVisitor implements TreeProcessingVisitorI {
	
	FileProcessor fp = null;
	
	public PopulateTreeVisitor(FileProcessor fileP){
		fp = fileP;
	}

	public void visit(BST bst) {
		String line;
		line = fp.readLineFromFile();
		while(line != null){
			for(String word: line.split(" ")){
				if(word.equals("Yes"))
				if(word.length() > 0){
					Node node = new Node(word);
					bst.insert(node);
				}
			}
			line = fp.readLineFromFile();
		}
	}

	@Override
	public void traverse(Node node) {
				
	}
}
